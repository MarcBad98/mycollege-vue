query SearchUsers($keycloakUserId: String!, $keyword: String!) {
  searchUsers(search: $keyword) {
    ...OtherUserData
  }
}

query RetrieveUsers($keycloakUserId: String!, $filters: UserInputType) {
  getUsers(inputs: $filters) {
    ...OtherUserData
  }
}

mutation CreateRetrieveUser($keycloakUserId: String!) {
  createRetrieveUser(inputs: { keycloakUserId: $keycloakUserId }) {
    user {
      ...UserData
    }
  }
}

mutation UpdateUserProfile(
  $keycloakUserId: String!
  $profile: UserProfileInputType!
) {
  updateUser(inputs: { keycloakUserId: $keycloakUserId, profile: $profile }) {
    user {
      ...UserData
    }
  }
}

mutation UpdateUserSettings(
  $keycloakUserId: String!
  $settings: UserSettingsInputType!
) {
  updateUser(inputs: { keycloakUserId: $keycloakUserId, settings: $settings }) {
    user {
      ...UserData
    }
  }
}

mutation UpdateUserSaveJob($keycloakUserId: String!, $saveJob: String!) {
  updateUser(inputs: { keycloakUserId: $keycloakUserId, saveJob: $saveJob }) {
    user {
      ...UserData
    }
  }
}

mutation UpdateUserUnsaveJob($keycloakUserId: String!, $unsaveJob: String) {
  updateUser(
    inputs: { keycloakUserId: $keycloakUserId, unsaveJob: $unsaveJob }
  ) {
    user {
      ...UserData
    }
  }
}

mutation AcceptFriendRequest(
  $friend1: String!
  $friend2: String!
  $messageId: String!
) {
  friend1: updateUser(
    inputs: { keycloakUserId: $friend1, addFriend: $friend2 }
  ) {
    # user who approved the friends request
    user {
      ...UserData
    }
  }
  friend2: updateUser(
    inputs: { keycloakUserId: $friend2, addFriend: $friend1 }
  ) {
    # user who sent the friends request
    user {
      keycloakUserId
    }
  }
  deleteMessage(inputs: { id: $messageId }) {
    message {
      id
    }
  }
}

mutation RejectFriendRequest($messageId: String!) {
  deleteMessage(inputs: { id: $messageId }) {
    message {
      id
    }
  }
}

mutation RevokeFriendship($friend1: String!, $friend2: String!) {
  friend1: updateUser(
    inputs: { keycloakUserId: $friend1, removeFriend: $friend2 }
  ) {
    # user who revoked the friends request
    user {
      ...UserData
    }
  }
  friend2: updateUser(
    inputs: { keycloakUserId: $friend2, removeFriend: $friend1 }
  ) {
    user {
      keycloakUserId
    }
  }
}

fragment UserData on UserType {
  keycloakUserId
  isPlusUser
  profile {
    fullName
    university
    major
    about
    employment {
      id
      title
      employer
      dateStarted
      dateEnded
      location
      description
    }
    education {
      id
      degree
      school
      dateStarted
      dateEnded
      location
      description
    }
  }
  settings {
    subscriptionEmail
    subscriptionSms
    targetedAdvertising
    language
  }
  friends
  jobsSaved
}

fragment OtherUserData on UserType {
  keycloakUserId
  profile {
    fullName
    university
    major
  }
  metadata(keycloakUserId: $keycloakUserId) {
    userIsConfirmedFriend
    userIsPendingFriend
    userSentFriendsRequest
  }
}
